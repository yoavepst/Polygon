#BlueJ class context
comment0.target=Point
comment0.text=\r\n\ This\ class\ represents\ a\ point,\ from\ the\ 1ST\ quarter,\ in\ a\ Cartesian\ system\ values.\ \r\n\r\n\ @author\ (Yoav\ Epstein)\r\n\ @version\ (16/11/2020)\r\n
comment1.params=x\ y
comment1.target=Point(double,\ double)
comment1.text=\r\n\ Constructs\ a\ new\ point\ by\ decoding\ the\ specified\ radius\ and\ angle\ using\r\n\ the\ setted\ x\ &\ y\ values.\r\n\ @param\ x\ The\ horizontal\ location\ of\ the\ point\r\n\ @param\ y\ The\ vertical\ location\ of\ the\ point\r\n
comment10.params=other
comment10.target=boolean\ equals(Point)
comment10.text=\ \r\n\ Checks\ if\ 2\ points\ are\ equal\ (the\ same),\ using\ its\ Cartesian\ system\ values.\r\n\ @param\ other\ The\ point\ to\ compare\ this\ point\ to\r\n\ @return\ True\ if\ the\ points\ are\ the\ same\r\n
comment11.params=other
comment11.target=boolean\ isAbove(Point)
comment11.text=\ \r\n\ \ Check\ if\ this\ point\ is\ above\ other\ point.\r\n\ \ @param\ other\ The\ point\ to\ compare\ this\ point\ to\r\n\ \ @return\ True\ if\ this\ point\ is\ above\ other\ point\r\n
comment12.params=other
comment12.target=boolean\ isUnder(Point)
comment12.text=\ \r\n\ \ Check\ if\ this\ point\ is\ under\ other\ point.\r\n\ \ @param\ other\ The\ point\ to\ compare\ this\ point\ to\r\n\ \ @return\ True\ if\ this\ point\ is\ under\ other\ point\r\n
comment13.params=other
comment13.target=boolean\ isLeft(Point)
comment13.text=\ \r\n\ \ Check\ if\ this\ point\ is\ located\ from\ the\ left\ hand\ side\ of\ other\ point.\r\n\ \ @param\ other\ The\ point\ to\ compare\ this\ point\ to\r\n\ \ @return\ True\ if\ this\ point\ is\ located\ from\ the\ left\ hand\ side\ other\ point\r\n
comment14.params=other
comment14.target=boolean\ isRight(Point)
comment14.text=\ \r\n\ \ Check\ if\ this\ point\ is\ located\ from\ the\ right\ hand\ side\ of\ other\ point.\r\n\ \ @param\ other\ The\ point\ to\ compare\ this\ point\ to\r\n\ \ @return\ True\ if\ this\ point\ is\ located\ from\ the\ left\ hand\ side\ other\ point\r\n
comment15.params=p
comment15.target=double\ distance(Point)
comment15.text=\r\n\ Measures\ the\ distance\ between\ two\ points.\r\n\ @param\ p\ The\ point\ that\ this\ point\ is\ measured\ its\ distance\ to.\r\n\ @return\ The\ distance\ between\ two\ points\r\n
comment16.params=dx\ dy
comment16.target=void\ move(double,\ double)
comment16.text=\r\n\ Shifting\ the\ point\ horizontal\ and\ vertical.\r\n\ @param\ dx\ The\ horizontal\ shifting\ distance\r\n\ @param\ dy\ The\ vertical\ shifting\ distance\r\n
comment2.params=other
comment2.target=Point(Point)
comment2.text=\r\n\ Constructs\ a\ new\ point\ by\ decoding\ the\ specified\ radius\ and\ angle\ copying\ \r\n\ the\ values\ form\ the\ other\ point.\r\n\ @param\ other\ The\ other\ point\r\n\ \r\n
comment3.params=angle
comment3.target=double\ radToDeg(double)
comment4.params=angle
comment4.target=double\ degToRad(double)
comment5.params=
comment5.target=double\ getX()
comment5.text=\r\n\ Gets\ the\ horizontal\ location\ of\ the\ point.\r\n\ @return\ The\ horizontal\ location\ of\ the\ point\r\n
comment6.params=
comment6.target=double\ getY()
comment6.text=\r\n\ Gets\ the\ vertical\ location\ of\ the\ point.\r\n\ @return\ The\ vertical\ location\ of\ the\ point\r\n
comment7.params=num
comment7.target=void\ setX(double)
comment7.text=\ \r\n\ Sets\ the\ horizontal\ location\ of\ the\ point.\r\n\ @param\ setX\ The\ value\ to\ be\ set\r\n
comment8.params=num
comment8.target=void\ setY(double)
comment8.text=\ \r\n\ Sets\ the\ vertical\ location\ of\ the\ point.\r\n\ @param\ setY\ The\ value\ to\ be\ set\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Returns\ a\ string\ that\ represents\ this\ point.\r\n\ @return\ String\ that\ represents\ this\ point\r\n\ in\ the\ following\ format\:\r\n\ (x,y)\r\n
numComments=17
